// Конечно, вот 20 задач с подсказками на использование методов map() и sort() в JavaScript:
//
//     1. Отсортируйте массив чисел в порядке возрастания:
//
//     Подсказка: Используйте функцию сравнения в методе sort().
// let numbers =[33,1,232,5,6,87,8967,433,9,2,55,]
// let result = numbers.sort((a,b) =>{
//     if (a>b){
//         return 1
//     }else{
//         return -1
//     }
// })
// console.log(result)

// 2. Преобразуйте массив строк в массив их длин:
//
//     Подсказка: Используйте map() для создания нового массива, содержащего длины строк.
//

// let names = ['afsdsd','erguiersferuig','ruiegklieiweio','aretw']
// let result = names.map(el => {
//     return el.length
// })
// console.log(result)

// 3. Отсортируйте массив объектов по значению их свойства 'age' в порядке возрастания:
//
//     Подсказка: Используйте функцию сравнения в методе sort() для объектов.
//


// 4. Преобразуйте массив чисел в массив их квадратов:
//
//     Подсказка: Используйте map() для преобразования каждого числа в квадрат.
//
// let numbers = [1,46,32,56,78,9,34,234,84,37,]
// let result = numbers.map(el =>{
//     return el ** 2
// })
// console.log(result)

// 5. Отсортируйте массив строк в алфавитном порядке:
//
//     Подсказка: Примените sort() к массиву строк.
//
// let names =['aetrr','rtyuoogpd','stdyvyfyrwt','wersdyfopk']
// let result = names.sort((a,b) =>{
//     if (a > b) {
//         return 1
//     }else {
//         return -1
//     }
// })
// console.log(result)
// 6. Преобразуйте массив чисел в массив их строковых представлений с добавлением символа "$":
//
// Подсказка: Используйте map() для создания нового массива, где каждое число будет преобразовано в строку с добавлением "$".
//
// let numbers = [1,2,3,4,5,6,7,8,9]
// let result = numbers.map(el =>{
//     return el.toString() + '$'
// })
// console.log(result)
// 7. Преобразуйте массив объектов в массив их имен:
//
//     Подсказка: Используйте map() для извлечения свойства "name" из каждого объекта.
//

// 8. Отсортируйте массив чисел в порядке убывания:
//
//     Подсказка: Используйте функцию сравнения в методе sort(), но поменяйте порядок сравнения.
//
// let numbers =[33,1,232,5,6,87,8967,433,9,2,55,]
// let result = numbers.sort((a,b) =>{
//     if (a>b){
//         return -1
//     }else{
//         return 1
//     }
// })
// console.log(result)

// 9. Преобразуйте массив строк в массив строк в верхнем регистре:
//
//     Подсказка: Используйте map() для преобразования каждой строки в верхний регистр.
//
// let names = ['sdfsdghergi','fuweyfghkfj','qwtredschbsdr','qwewrrttyuiioi']
// let result = names.map(el =>{
//     return el.toUpperCase()
// })
// console.log(result)
// 10. Отсортируйте массив объектов по значению их свойства 'name' в алфавитном порядке:
//
//     Подсказка: Используйте функцию сравнения в методе sort() для объектов с учетом значения свойства "name".
//
// 11. Преобразуйте массив чисел в массив их абсолютных значений:
//
//     Подсказка: Используйте map() и функцию Math.abs().
// //
// let numbers =[-2324,-1278,-45,-92352,-1244]
// let result =numbers.map(el =>{
//     return Math.abs(el)
// })
// console.log(result)
// 12. Отсортируйте массив объектов по значению их свойства 'date' в порядке возрастания (если они представляют даты):
//
// Подсказка: Используйте функцию сравнения, если объекты представляют даты.
//

// 13. Преобразуйте массив строк в массив строк в обратном порядке (например, "hello" станет "olleh"):
//
// Подсказка: Используйте map() и метод reverse() для каждой строки.
//
// let names = ['alisher','bekzat','abdulla','ysmanali','arstan']
// let result = names.map(el =>{
//     return el.split('').reverse().join('').slice(0,1).toUpperCase() + el.split('').reverse().join('').slice(1).toLowerCase()
// })
// console.log()


// 14. Отсортируйте массив чисел в порядке возрастания, но сначала выведите все четные числа, а затем все нечетные числа:
//
//     Подсказка: Разделите массив на два подмассива (четные и нечетные) и объедините их в один массив после сортировки.
//
// let numbers = [1,343,45,778,98,345,745,2,45,5,13,78,998,92,4,23,6]
// let newNambers = []
// let newtwoNumbers = []
// let result = numbers.map(el =>{
//     if (el % 2 === 0) {
//         return newNambers.push(el)
//     }else {
//         return newtwoNumbers.push(el)
//     }
// })
// let resultTwo = newNambers.sort((a,b)  =>{
//     if (a>b) {
//         return 1
//     } else {
//         return -1
//     }
// })
// let resultThree = newtwoNumbers.sort((a,b)  =>{
//     if (a>b) {
//         return 1
//     } else {
//         return -1
//     }
// })
// let test = newtwoNumbers.map(el => {
//     return newNambers.push(el)
// })
// console.log(newNambers)

// 15. Преобразуйте массив строк в массив строк в обратном порядке (например, "hello" станет "olleh"):
//
// Подсказка: Используйте map() и метод split('') для разделения строки на массив символов, затем используйте reverse(), а затем join('') для объединения символов обратно в строку.
//
// let names = ['alisher','bekzat','abdulla','ysmanali','arstan']
// let result = names.map(el =>{
//     return el.split('').reverse().join('').slice(0,1).toUpperCase() + el.split('').reverse().join('').slice(1).toLowerCase()
// })
// console.log(result)
// 16. Отсортируйте массив объектов по значению их свойства 'date' в порядке убывания (если они представляют даты):
//
// Подсказка: Используйте функцию сравнения для объектов с учетом свойства "date" и измените порядок сравнения.
//
// 17. Преобразуйте массив строк в массив их первых букв:
//
//     Подсказка: Используйте map() и метод charAt(0) для каждой строки.
//
// let names = ['alisher','bekzat','abdulla','ysmanali','arstan']
// let result = names.map(el =>{
//     return el.charAt(0)
//     return el[0]
// })
// console.log(result)
// 18. Преобразуйте массив строк в массив их последних букв:
//
//     Подсказка: Используйте map() и метод charAt(length-1) для каждой строки.
//
// let names = ['alisher','bekzat','abdulla','ysmanali','arstan']
// let result = names.map(el =>{
//     return el[el.length -1]
//     return el.charAt(el.length -1)
// })
// console.log(result)
// 19. Отсортируйте массив объектов по значению их свойства 'name' в обратном алфавитном порядке:
//
//     Подсказка: Используйте функцию сравнения для объектов, но измените порядок сравнения для обратного алфавитного порядка.
//
// 20. Преобразуйте массив чисел в массив их кубов:
//
//     Подсказка: Используйте map() для возведения каждого числа в куб.
//
//     Эти задачи с подсказками помогут вам лучше понять, как использовать методы map() и sort() в JavaScript.


// let numbers = [1,46,32,56,78,9,34,234,84,37,]
// let result = numbers.map(el =>{
//     return el ** 3
// })
// console.log(result)

